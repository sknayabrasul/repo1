<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
                      http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd" 	version="2.0">

	<persistence-unit name="JPA-PU" transaction-type="RESOURCE_LOCAL">
	
	<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
	
	<!-- <provider>org.hibernate.ejb.HibernatePersistence</provider>-->

			<properties>		
			

<!-- hibernate.dialect property makes Hibernate to generate the appropriate SQL statements 
for the chosen database.
Hibernate uses "dialect" configuration to know which database you are using 
so that it can convert hibernate query to database specific query.
 hibernate knows whats kind of language we are used and what type database we are used.
 it is database dependent. It connects the database specific query language which we want to use.
 -->

			<property name="dialect" value="org.hibernate.dialect.Oracle10gDialect" />	
			
			<property name="javax.persistence.jdbc.url" value="jdbc:oracle:thin:@localhost:1521:ORCL" />	
			<property name="javax.persistence.jdbc.user" value="SCOTT" />
			<property name="javax.persistence.jdbc.password" value="TIGER" />			
			<property name="javax.persistence.jdbc.driver" 	value="oracle.jdbc.OracleDriver" />
			
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.hbm2ddl.auto" value="update" /> 
					
			</properties>

	</persistence-unit>	
	
	
</persistence>


<!-- hibernate.dialect property makes Hibernate to generate the appropriate SQL statements 
for the chosen database.
Hibernate uses "dialect" configuration to know which database you are using 
so that it can convert hibernate query to database specific query.
 hibernate knows whats kind of language we are used and what type database we are used.
 it is database dependent. It connects the database specific query language which we want to use.
 -->


<!--  hibernate.hbm2ddl.auto, automatically validates or exports schema DDL to the database when the SessionFactory is created. -->




<!--  hibernate.hbm2ddl.auto, 
hbm2ddl.auto tells the hibernate whether Table in database need to be created or not

This property has four values mention below:

1)create : -hibernate always create new table .. 
if table is present in database than it delete it and recreate it
with that previous data in table is lost

2)update :- if value is update than hibernate first validate 
that table is present in database or not , 
if present used that table or if not create a new table.

3)validate :- if value is validate than hibernate only verified that table is present or not..
if table is not exit than throws exception.

4)create-drop: if value is create-drop than hibernate create a new table perform operation and
 delete that table immediately this value is used for testing of the hibernate code.
 -->